<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诚君的个人站</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-07-05T08:19:53.247Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>HonestLiu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Emby搭配ReNamer实现完美海报墙</title>
    <link href="http://example.com/2023/07/05/Emby%E6%90%AD%E9%85%8DReNamer%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E6%B5%B7%E6%8A%A5%E5%A2%99/"/>
    <id>http://example.com/2023/07/05/Emby%E6%90%AD%E9%85%8DReNamer%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E6%B5%B7%E6%8A%A5%E5%A2%99/</id>
    <published>2023-07-05T08:19:10.000Z</published>
    <updated>2023-07-05T08:19:53.247Z</updated>
    
    <content type="html"><![CDATA[<h3 id="能够让Emby识别的剧集目录结构"><a href="#能够让Emby识别的剧集目录结构" class="headerlink" title="能够让Emby识别的剧集目录结构"></a>能够让Emby识别的剧集目录结构</h3><p>影视剧&#x2F;动漫名称</p><ul><li>Season 01<ul><li>S01E01</li><li>S01E02</li><li>……</li></ul></li></ul><p>注：</p><p>1.Season 01即为第几季，根据实际情况人为调整一下即可，依次是Season 02，Season 03…..另外，对于<code>特典</code>这类 ，可以尝试命名为Season 00，一定概率可以被识别。</p><p>2.<code>S01</code>中的<code>01</code>既是剧集的<code>季度</code>，也就是常说的第几季，需要根据具体予以修改，<code>E01</code>,<code>E02</code>…即是集数，这就是本期用ReNamer进行干预的地方。</p><h3 id="ReNamer"><a href="#ReNamer" class="headerlink" title="ReNamer"></a>ReNamer</h3><p>ReNamer官网：<a href="https://www.den4b.com/products/renamer">https://www.den4b.com/products/renamer</a></p><p>剧集重命名规则示范(应用于上面目录中的<code>Season 01</code>等)：</p><table><thead><tr><th>#</th><th>规则</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>删除</td><td>删除从位置1知道末尾（忽略扩展名）</td></tr><tr><td>2</td><td>插入</td><td>插入“S01E”作为前缀（忽略扩展名）</td></tr><tr><td>3</td><td>序列化</td><td>增量序列化起始于1重复1增量1补足长度为2作为后缀（忽略扩展名）</td></tr></tbody></table><h3 id="修改Hosts"><a href="#修改Hosts" class="headerlink" title="修改Hosts"></a>修改Hosts</h3><p>由于DNS污染严重，Emby用于刮削的网站大都无法直连，这里通过修改Hosts，绕过DNS，让我们的服务器&#x2F;计算机直接解析到刮削网站，从而实现完美刮削。</p><p>1.Windows修改方法：以管理员身份打开<code>Windows PowerShell</code>后键入<code>notepad</code>然后打开hosts文件</p><ul><li><p>Windows hosts文件地址：<code>C:\Windows\System32\drivers\etc\hosts</code></p></li><li><p>添加通过<code>ping.chinaz.com</code>Ping出的最新<code>api.themoviedb.org</code>IP地址。格式:<code>ip地址 api.themoviedb.org</code></p></li></ul><p>2.Unraid&#x2F;Linux修改方法：终端键入<code>sudo nano /etc/hosts</code>按上述方法获取IP后键入即可，格式一致。</p><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>最终便可以实现Emby的完美刮削了，虽然过程有点复杂，但花点心思，你就能获得超高颜值的海报墙了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;能够让Emby识别的剧集目录结构&quot;&gt;&lt;a href=&quot;#能够让Emby识别的剧集目录结构&quot; class=&quot;headerlink&quot; title=&quot;能够让Emby识别的剧集目录结构&quot;&gt;&lt;/a&gt;能够让Emby识别的剧集目录结构&lt;/h3&gt;&lt;p&gt;影视剧&amp;#x2F;动漫名称&lt;</summary>
      
    
    
    
    
    <category term="Nas" scheme="http://example.com/tags/Nas/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/07/05/hello-world/"/>
    <id>http://example.com/2023/07/05/hello-world/</id>
    <published>2023-07-05T06:06:59.580Z</published>
    <updated>2023-07-05T06:06:59.580Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JAVA-控制流学习笔记</title>
    <link href="http://example.com/2023/07/04/JAVA-%E6%8E%A7%E5%88%B6%E6%B5%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/07/04/JAVA-%E6%8E%A7%E5%88%B6%E6%B5%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-07-04T09:35:23.000Z</published>
    <updated>2023-07-04T09:36:34.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-if-else"><a href="#一-if-else" class="headerlink" title="一. if-else"></a>一. if-else</h2><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><pre><code class="java">if(布尔值表达式) //如果为true则执行    程序主干else if(布尔值表达式) //如果为true则执行    程序主干else //上述全为false时执行    </code></pre><h3 id="例程"><a href="#例程" class="headerlink" title="例程"></a>例程</h3><pre><code class="java">public class IfElse &#123;    static int result = 0;    static void test(int a,int b) &#123;        if (a &gt; b) &#123;            result = +1;        &#125;        else if (a &lt; b) &#123;            result = -1;        &#125;        else &#123;            result = 0;        &#125;    &#125;    public  static void main(String[] args)&#123;        test(10,5);        System.out.println(result); //+1        test(5,10);        System.out.println(result); //-1        test(2,2);        System.out.println(result);  //0    &#125;&#125;</code></pre><h2 id="二-While"><a href="#二-While" class="headerlink" title="二.While"></a>二.While</h2><blockquote><p><strong>迭代语句</strong></p><p>此语句会重复执行，知道其控制作用的布尔值为<strong>false</strong>时方会停止执行</p></blockquote><h3 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h3><pre><code class="java">while(boolean值)&#123;    程序主干&#125;</code></pre><h3 id="例程-1"><a href="#例程-1" class="headerlink" title="例程"></a>例程</h3><pre><code class="java">    int i = 1; //循环变量初始化    while( i &lt;= 10 ) &#123;//循环条件,当i大于10时，此时布尔值转为false,循环停止。        System.out.println(i);//执行语句        i++;    &#125;/*因为布尔值固定为true,故此时为死循环。    while(true) &#123;            &#125; */</code></pre><h2 id="三-do-while"><a href="#三-do-while" class="headerlink" title="三.do-while"></a>三.do-while</h2><blockquote><p>do-while与while的区别就是do-while中的语句至少执行一次，即便起控制作用的布尔值第一次就是flase.</p></blockquote><h3 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h3><pre><code class="java">do     程序主体 while(布尔值表达式)    程序主干</code></pre><h2 id="四-for"><a href="#四-for" class="headerlink" title="四.for"></a>四.for</h2><blockquote><p>这种循环第一次会进行初始化，然后进行条件测试，每次迭代结束后，还会有某种形式的“步进”</p><p>初始化和步进部分都是按顺序执行的，初始化会最先执行</p></blockquote><h3 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h3><pre><code class="java">for(初始化表达式; 布尔值表达式; 步进(可空))    程序主体</code></pre><h3 id="例程-2"><a href="#例程-2" class="headerlink" title="例程"></a>例程</h3><pre><code class="java">public class ForTest &#123;  public static void main(String args[]) &#123;    int i;    for (i = 0; i &lt; 3; i = i + 1)      System.out.println(i);  &#125;&#125;/*输出012*/</code></pre><h2 id="五-for-each"><a href="#五-for-each" class="headerlink" title="五.for each"></a>五.for each</h2><blockquote><p>增强的for循环</p><p>作用：从一个集合(数组)中遍历数据</p></blockquote><h3 id="格式-4"><a href="#格式-4" class="headerlink" title="格式"></a>格式</h3><p>1.先定义数值，假设数组名为array;</p><p>2.for(数据类型 变量:array) { &#x2F;&#x2F;数据类型与数组类型一致</p><p>}</p><h3 id="例程-3"><a href="#例程-3" class="headerlink" title="例程"></a>例程</h3><pre><code class="java">String[] names = &#123;&quot;刘备&quot;,&quot;关羽&quot;,&quot;张飞&quot;,&quot;诸葛亮&quot;&#125;；    for(String s:names)&#123;        System.out.println(s);    &#125;/*刘备关羽张飞诸葛亮</code></pre><h2 id="六-return"><a href="#六-return" class="headerlink" title="六.return"></a>六.return</h2><blockquote><p>用途：</p><p>1.指定一个方法的返回值（不存在就返回<strong>void</strong>）</p><p>2.使当前方法退出，并返回这个值</p><p>注意：</p><p>1.如果一个返回void值的方法后面没有return,则它后面会有一个隐含的return</p><p>2.返回非void值的方法，则必须确定每一条代码路径都会返回一个值</p></blockquote><h3 id="例程-4"><a href="#例程-4" class="headerlink" title="例程"></a>例程</h3><pre><code class="java">public class ReturnTest &#123;    static int test(int a, int b) &#123;        if (a &gt; b) &#123;            return +1; //满足条件，返回 +1        &#125;        else if (a &lt; b) &#123;            return -1; //满足条件，返回 -1        &#125;        else &#123;            return 0; //满足条件，返回 0        &#125;    &#125;    public  static void main(String[] args) &#123;        System.out.println(test(10,5));//+1        System.out.println(test(5,10)); //-1        System.out.println(test(2,2));  //0    &#125;&#125;</code></pre><h2 id="七-break和continue"><a href="#七-break和continue" class="headerlink" title="七.break和continue"></a>七.break和continue</h2><blockquote><p>1.<strong>break</strong>用于<strong>跳出一个循环体或者完全结束一个循环</strong> (结束了其所在的<strong>整个</strong>循环)</p><p>2.<strong>continue</strong>语句的作用是<strong>跳过本次循环体中剩下尚未执行的语句，立即进行下一次的循环条件判定 ** (只是跳过了符合其条件的</strong>一次**循环)</p></blockquote><h3 id="Break例程-达成条件结束循环时用"><a href="#Break例程-达成条件结束循环时用" class="headerlink" title="Break例程(达成条件结束循环时用)"></a>Break例程(达成条件结束循环时用)</h3><blockquote><p>条件达成时，该循环彻底停止，不会继续执行</p></blockquote><pre><code class="java">public class Test3 &#123;    public static void main(String[] args) &#123;        for(int i=0; i&lt;12; i++)&#123;            if(i==5)&#123;                break;//到 i==5 ,这一个for循环直接全部结束            &#125;            System.out.print(i+&quot; &quot;);        &#125;    &#125;&#125;/*输出0 1 2 3 4*/</code></pre><h3 id="Continue例程-跳一次的时用"><a href="#Continue例程-跳一次的时用" class="headerlink" title="Continue例程(跳一次的时用)"></a>Continue例程(跳一次的时用)</h3><blockquote><p>条件达成时，停止该循环中符合条件的<strong>那一次</strong>循环，后继循环将继续运行</p></blockquote><pre><code class="java">public class Test4 &#123;    public static void main(String[] args) &#123;        for(int i=0; i&lt;12; i++)&#123;            if(i==5)&#123;                continue; //有且仅有跳过了5这一次的循环，整体循环还将继续            &#125;            System.out.print(i+&quot; &quot;);        &#125;    &#125;&#125;/*输出0 1 2 3 4 6 7 8 9 10 11*/</code></pre><h2 id="五-Switch循环-分支结构"><a href="#五-Switch循环-分支结构" class="headerlink" title="五.Switch循环(分支结构)"></a>五.Switch循环(分支结构)</h2><blockquote><p>Switch在后继JAVA版本中提供了更加简化的语法，这个笔记先不展开，黑马的笔记里有提及。</p></blockquote><h3 id="句式"><a href="#句式" class="headerlink" title="句式"></a>句式</h3><blockquote><p><strong>格式说明：</strong></p><p>1.<strong>整数值选择器</strong>：(将生成用于匹配的值，与下面case的值进行匹配)取值为byte，short，int，char等整数值，JAVA7后对于非整数值加入了<strong>字符串</strong>-&gt;String.</p><p>2.**case   **:后面跟的是要和表达式进行比较的值（被匹配值）。</p><p>3.<strong>break</strong>  :表示中断，结束的意思，用来结束switch语句,没有的话它会继续执行知道遇到下一个break,俗称<strong>case穿透</strong></p><p>4.<strong>default</strong>  :表示所有情况都不匹配的时候，就执行此处的内容，和if语句的else相似。(其执行完毕的地方是所有break跳转的目的地)</p><p>5.<strong>case</strong>后面的值只能是字面量，不能是变量</p><p>6.<strong>case</strong>给出的值<strong>不</strong>允许<strong>重复</strong></p></blockquote><pre><code class="java">switch(表达式)&#123;    case 值1:        语句体1;        break;    case 值2:        语句体2;        break;    ....     default:        语句体n+1;        break;&#125;</code></pre><h3 id="例程："><a href="#例程：" class="headerlink" title="例程："></a><strong>例程：</strong></h3><blockquote><pre><code>    需求：键盘录入星期数，显示今天的减肥活动。    周一：跑步    周二：游泳    .....</code></pre></blockquote><p>整数例程(注:字符串例程详见基础卷P96-5.9例程)</p><pre><code class="java">import java.util.Scanner;public class Test9 &#123;    public static void main(String[] args) &#123;              //分析：        //1.键盘录入星期数        Scanner sc = new Scanner(System.in);        System.out.println(&quot;请录入星期&quot;);        int week = sc.nextInt();        //2.利用switch对星期进行匹配        switch (week)&#123;            case 1:                System.out.println(&quot;跑步&quot;);                break;            case 2:                System.out.println(&quot;游泳&quot;);                break;         /*                .........(省略)                                         */            default:                System.out.println(&quot;没有这个星期&quot;);                break;        &#125;    &#125;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-if-else&quot;&gt;&lt;a href=&quot;#一-if-else&quot; class=&quot;headerlink&quot; title=&quot;一. if-else&quot;&gt;&lt;/a&gt;一. if-else&lt;/h2&gt;&lt;h3 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
</feed>
